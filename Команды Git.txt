Команды Git для работы в терминале  Windows идентичны командам терминала Ubuntu

Для работы с репозиториями через терминал, нужно создать папку на компьютере, в которую будут 
клонироваться репозитории, и перейти в неё.

git clone <URL репозитория> - Клонирует репозиторий в дирректорию, в которой мы находимся

git add имя_файла - добавление файла в индекс (клонированный репозиторий)

git status - покажет какие файлы есть в репозитории, в котором мы работам. 

git commit -m "Описание изменений" - Создание коммита с описанием

git push origin master - отправка коммита на GitHub (origin - имя удаленного, склонированного
репозитория, master - название ветки, в которую мы пушим коммит)

git push <имя_удаленного_репозитория> <локальная_ветка>:<удаленная_ветка> - используется для получения (пулла) изменений из удаленного репозитория и объединения их с вашей локальной веткой. Эта команда сочетает в себе две операции: git fetch и git merge.

     git fetch origin master - Сначала Git извлекает (fetches) изменения из удаленного репозитория без слияния их с вашей текущей веткой. Это позволяет вам увидеть, какие изменения были внесены в удаленный репозиторий.
     git merge origin/master - Затем Git пытается объединить (merge) извлеченные изменения из удаленного репозитория с вашей текущей веткой. Если нет конфликтов, Git автоматически сливает изменения и создает новый коммит с объединенными результатами.






Разбрём в следующий раз:
git branch - Показывает список локальных веток и помечает текущую ветку.

git checkout <имя_ветки> - Переключение на указанную ветку.

git checkout -b <имя_новой_ветки> - Создание новой ветки и переключение на неё.

git diff - Показывает разницу между вашими незакоммиченными изменениями и последним коммитом.

git log - Просмотр истории коммитов.

git remote - Показывает список удаленных репозиториев, связанных с вашим локальным репозиторием.

git remote -v - Показывает URL удаленных репозиториев.

git remote add <имя> <URL_репозитория> - Добавление нового удаленного репозитория.

git remote remove <имя> - Удаление связи с удаленным репозиторием.

git fetch <имя_удаленного_репозитория> - Извлечение изменений из указанного удаленного репозитория.

git merge <имя_ветки> - Слияние указанной ветки с текущей.

git rebase <имя_ветки> - Применение изменений текущей ветки поверх указанной ветки.

git reset <файл> - Отмена добавления файла в индекс (перед коммитом).

git reset --hard <коммит> - Возврат к указанному коммиту, отменяя все изменения после него.

git stash - Скрытие текущих незакоммиченных изменений.

git stash apply - Применение последних спрятанных изменений.

git stash pop - Применение и удаление последних спрятанных изменений.

git rm <файл> - Удаление файла из репозитория и индекса.

git mv <старое_имя> <новое_имя> - Переименование файла и отслеживание изменений.

git remote show <имя_удаленного_репозитория> - Отображение информации о удаленном репозитории.

git stash: Скрытие незакоммиченных изменений.
git tag: Работа с тегами (версионирование).
git reset: Отмена изменений.



 В Git есть множество других команд и опций, которые могут быть полезны в различных ситуациях.
  Например, команды для работы с ветками, слиянием, историей, работой с тегами и многие другие.

